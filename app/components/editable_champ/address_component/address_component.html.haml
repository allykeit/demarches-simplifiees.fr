.fr-input-group.address-ban
  %react-fragment
    = render ReactComponent.new "ComboBox/RemoteComboBox", **react_props do
      = render ReactComponent.new "ComboBox/ComboBoxValueSlot", field: :data, name: @form.field_name(:address)

.fr-input-group
  .fr-checkbox-group
    = @form.check_box :not_in_ban, { class: "fr-input", checked: !@champ.ban?, disabled: @champ.international? }, 'true', 'false'
    = @form.label :not_in_ban, class: 'fr-label' do
      - t('.not_in_ban')

- if !@champ.ban?
  .fr-mt-3w
    .fr-input-group
      %span.fr-label
        = @champ.libelle
      - if @champ.description.present?
        .fr-hint-text{ id: @champ.describedby_id }= render SimpleFormatComponent.new(@champ.description, allow_a: true)

    .champs-group
      .fr-input-group
        = @form.label :country_code, for: @champ.country_input_id, class: 'fr-label' do
          - capture do
            = t('.country_label')
            = render EditableChamp::AsteriskMandatoryComponent.new
        = @form.select :country_code, pays_options, @champ.mandatory? ? { prompt: '' } : { include_blank: '' }, required: @champ.required?, id: @champ.country_input_id, class: "width-33-desktop fr-select small-margin"

      = render Dsfr::InputComponent.new(form: @form, attribute: :street_address, opts: { class:"fr-input small-margin" }) do |c|
        - c.with_label { t('.street_label') }
        - c.with_hint { @champ.international? ? t('.street_international_hint') : t('.street_fr_hint') }

      - if @champ.international?
        = render Dsfr::InputComponent.new(form: @form, attribute: :city_name, opts: { class:"fr-input small-margin width-33-desktop " }) do |c|
          - c.with_label { t('.city_label') }
          - c.with_hint t('.city_hint')


        .fr-input-group
          = render Dsfr::InputComponent.new(form: @form, attribute: :postal_code, opts: { class:"fr-input small-margin width-33-desktop " }) do |c|
            - c.with_label { t('.postal_code_label') }
      - else
        .fr-input-group{ class: class_names("fr-input-group--error": @champ.errors.include?(:commune_name)) }
          = @form.label :commune_name, for: @champ.city_input_id, class: 'fr-label' do
            - capture do
              = t('.commune_label')
              = render EditableChamp::AsteriskMandatoryComponent.new
              %span.fr-hint-text= t('.commune_hint')
          %react-fragment
            = render ReactComponent.new "ComboBox/RemoteComboBox", **commune_react_props

          - if @champ.errors.include?(:commune_name)
            %p.fr-error-text{ id: @champ.city_input_id }= @champ.errors.full_messages_for(:commune_name).first
