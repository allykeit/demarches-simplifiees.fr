.fr-input-group.address-ban
  %react-fragment
    = render ReactComponent.new "ComboBox/RemoteComboBox", **react_props do
      = render ReactComponent.new "ComboBox/ComboBoxValueSlot", field: :data, name: @form.field_name(:address)

.fr-input-group
  .fr-checkbox-group
    = @form.check_box :not_in_ban, { class: "fr-input", checked: !@champ.ban?, disabled: @champ.international?, 'aria-labelledby': not_in_ban_aria_labelledby }, 'true', 'false'
    = @form.label :not_in_ban, class: 'fr-label', id: not_in_ban_label_id do
      - t('.not_in_ban')

- if !@champ.ban?
  .fr-mt-3w

    %fieldset.fr-fieldset.not-in-ban-fieldset
      %legend.fr-fieldset__legend.fr-mb-1w{ id: fieldset_legend_id }
        = @champ.libelle
      - if @champ.description.present?
        .fr-hint-text{ id: @champ.describedby_id }= render SimpleFormatComponent.new(@champ.description, allow_a: true)

      .champs-group.width-100
        .fr-input-group
          = @form.label :country_code, for: @champ.country_input_id, class: 'fr-label', id: country_label_id do
            - capture do
              = t('.country_label')
              = render EditableChamp::AsteriskMandatoryComponent.new
          = @form.select :country_code,
            pays_options,
            @champ.mandatory? ? { prompt: '' } : { include_blank: '' },
            required: @champ.required?,
            id: @champ.country_input_id,
            class: "width-33-desktop fr-select small-margin",
            'aria-labelledby': country_aria_labelledby

        = render Dsfr::InputComponent.new(form: @form, attribute: :street_address, opts: { class:"fr-input small-margin", "aria-labelledby": street_aria_labelledby }, label_opts: { id: street_label_id }) do |c|
          - c.with_label { t('.street_label') }
          - c.with_hint { @champ.international? ? t('.street_international_hint') : t('.street_fr_hint') }

        - if @champ.international?
          = render Dsfr::InputComponent.new(form: @form, attribute: :city_name, opts: { class:"fr-input small-margin width-33-desktop ", "aria-labelledby": city_aria_labelledby }, label_opts: { id: city_label_id }) do |c|
            - c.with_label { t('.city_label') }
            - c.with_hint t('.city_hint')


          .fr-input-group
            = render Dsfr::InputComponent.new(form: @form, attribute: :postal_code, opts: { class:"fr-input small-margin width-33-desktop ", "aria-labelledby": postal_code_aria_labelledby }, label_opts: { id: postal_code_label_id }) do |c|
              - c.with_label { t('.postal_code_label') }
        - else
          .fr-input-group{ class: class_names("fr-input-group--error": @champ.errors.include?(:commune_name)) }
            = @form.label :commune_name, for: @champ.city_input_id, class: 'fr-label', id: city_label_id do
              - capture do
                = t('.commune_label')
                = render EditableChamp::AsteriskMandatoryComponent.new
                %span.fr-hint-text= t('.commune_hint')
            %react-fragment
              = render ReactComponent.new "ComboBox/RemoteComboBox", **commune_react_props

            - if @champ.errors.include?(:commune_name)
              %p.fr-error-text{ id: @champ.city_input_id }= @champ.errors.full_messages_for(:commune_name).first
