= form_with model: [:admin, service], id: "service_form" do |f|

  = render Dsfr::InputComponent.new(form: f, attribute: :siret, input_type: :text_field,
    opts: { placeholder: "14 chiffres, sans espace",
            onblur: token_list("Turbo.visit('#{prefill_admin_services_path(procedure_id: procedure.id)}?siret=' + this.value)" => service.new_record?) }) do |c|
    - if service.etablissement_infos.blank? && local_assigns[:prefilled].nil?
      - c.with_hint do
        = "Indiquez le numéro de SIRET de l’organisme dont ce service dépend. Rechercher le SIRET sur "
        = link_to("annuaire-entreprises.data.gouv.fr", annuaire_link, **external_link_attributes)
        - if service.new_record?
          %br
          = "Nous préremplirons les informations de contact à partir de l’Annuaire Service Public correspondant."

  .fr-mb-2w
    - if local_assigns[:prefilled] == :success
      %p.fr-info-text Génial ! La plupart des informations du service ont été préremplies ci-dessous. Vérifiez-les et complétez-les le cas échéant.
    - elsif local_assigns[:prefilled] == :partial
      %p.fr-info-text
        Nous avons prérempli certaines informations correspondant à ce SIRET. Complétez les autres manuellement.
    - elsif local_assigns[:prefilled] == :failure
      %p.fr-error-text
        Une erreur a empêché le préremplissage des informations.
        Vérifiez que le numéro de SIRET est correct et complétez les informations manuellement le cas échéant.

  = render Dsfr::InputComponent.new(form: f, attribute: :nom, input_type: :text_field)

  = render Dsfr::InputComponent.new(form: f, attribute: :organisme, input_type: :text_field)

  .fr-input-group
    = f.label :type_organisme, class: "fr-label" do
      Type d’organisme
      = render EditableChamp::AsteriskMandatoryComponent.new

    = f.select :type_organisme, Service.type_organismes.keys.map { |key| [ I18n.t("type_organisme.#{key}"), key] }, { include_blank: true }, { class: "fr-select" , required: true }

  = render Dsfr::CalloutComponent.new(title: "Informations de contact") do |c|
    - c.with_body do
      Votre démarche sera hébergée par #{Current.application_name} – mais nous ne pouvons pas assurer le support des démarches. Et malgré la dématérialisation, les usagers se poseront parfois des questions légitimes sur le processus administratif.
      %br
      %br
      %strong Il est donc indispensable que les usagers puissent vous contacter
      par le moyen de votre choix.

  - if f.object.errors[:base].present?
    .fr-alert.fr-alert--error.fr-mb-3w
      %p
        = f.object.errors[:base].first

  .fr-form-group
    %legend.fr-fieldset__legend--regular.fr-fieldset__legend
      Veuillez renseigner au moins un des deux champs de contact ci-dessous
      = render EditableChamp::AsteriskMandatoryComponent.new
    .fr-fieldset.fr-fieldset--inline.fr-ml-0-5w{ class: f.object.errors[:base].present? ? 'fr-fieldset--error' : 'fr-fieldset--info' }
      .fr-fieldset__content
        .fr-fieldset__element
          = render Dsfr::InputComponent.new(form: f, attribute: :link, input_type: :text_field,
            opts: {}, required: false) do |c|
            - c.with_hint do
              = "Exemple : https://www.mairie-de-mours.fr/contact"

        .fr-fieldset__element
          = render Dsfr::InputComponent.new(form: f, attribute: :email, input_type: :email_field,
            opts: {}, required: false) do |c|
            - c.with_hint do
              = "Exemple : contact@mairie-de-mours.fr"

  = render Dsfr::InputComponent.new(form: f, attribute: :telephone, input_type: :telephone_field)
  = render Dsfr::InputComponent.new(form: f, attribute: :horaires, input_type: :text_area)
  = render Dsfr::InputComponent.new(form: f, attribute: :adresse, input_type: :text_area)

  - if local_assigns[:procedure].present?
    = hidden_field_tag :procedure_id, procedure.id
    = render Procedure::FixedFooterComponent.new(procedure: procedure, form: f)
